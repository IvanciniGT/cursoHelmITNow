
#Bucle:
#  diccionario
#    4 veces:
#    maestros
#    dataingesta
#    coordinadores
#      En cada ejecucion mirare si me han pedido 0 replicas... y no hago na....

{{- $tiposNodos := dict "master" .Values.master "data" .Values.data "ingest" .Values.ingest "coordinator" .Values.coordinator -}}

{{- $ReleaseName := .Release.Name }}
{{- $Elastic := .Values.elastic }}
#{{- with .Values.master.deploy }}

{{ range $tipoNodo, $valores := $tiposNodos }}

{{ if not ( eq ( $valores.deploy.replicas ) ( 0.0 ) ) }}


{{- $nuevoContexto := dict "Default" $tipoNodo "Servicio" $valores.service "ReleaseName" $ReleaseName -}}
{{- $servicio_statefulset := include "elasticsearch.nombre-servicio" $nuevoContexto -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: {{ $ReleaseName }}-{{ $tipoNodo }}
    labels: 
        app: {{ $ReleaseName }}-es
        {{ $tipoNodo }}: "true"
spec:
    replicas: {{ $valores.deploy.replicas }}
    selector:
      matchLabels:
        app: {{ $ReleaseName }}-es
        {{ $tipoNodo }}: "true"
        
    serviceName: {{ $servicio_statefulset }}
    
    template: # Plantilla del POD 
        metadata:
            labels: 
                app: {{ $ReleaseName }}-es
                {{ $tipoNodo }}: "true"
{{- if eq $tipoNodo "data" -}}
  {{- if eq ( $.Values.ingest.deploy.replicas ) ( 0.0 )  }}
                ingest: "true"
  {{- end }}
  {{- if eq ( $.Values.coordinator.deploy.replicas ) ( 0.0 )  }}
                coordinator: "true"
  {{- end }}
{{- end }}
                {{- with $valores.deploy.extraLabels }}
                  {{- toYaml . | nindent 16 }}
                {{- end }}


        spec:
          {{- with $valores.deploy.affinities }}
          affinity: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
          
          {{- with $valores.deploy.tolerations }}
          tolerations: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
      
          containers:
            - name: elasticsearch
              #image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
              image: {{ include "elasticsearch.imagen-elasticsearch" $ }}
                                                                    # Este $ no nos vale.... y la vamos a tener que liar
              {{- with $valores.deploy.resources }}
              resources: 
                {{- toYaml . | nindent 18 }}
              {{- end }}
              ports:
                - containerPort: {{ $Elastic.image.ports.private }}
                - containerPort: {{ $Elastic.image.ports.public }}
              envFrom:
                - configMapRef:
                    name: {{ include "elasticsearch.nombre-configmap-general" $ }}
                - configMapRef: 
                    name: {{ include "elasticsearch.nombre-configmap-default" $ }}
                - configMapRef: 
                    name: {{ $ReleaseName}}-{{ $tipoNodo }}-es
              env:
                - name: node.name
                  valueFrom: 
                    fieldRef:
                       fieldPath: metadata.name
{{- if not (eq $tipoNodo "coordinator" ) }}              
                - name: node.{{ $tipoNodo }}
                  value: "true"
{{- end -}}
{{- if eq $tipoNodo "data" -}}
  {{- if eq ( $.Values.ingest.deploy.replicas ) ( 0.0 )  }}
                - name: node.ingest
                  value: "true"
  {{- end -}}
{{- end -}}
{{- if eq $tipoNodo "master" }}              
                - name: discovery.seed_hosts
                  value: {{ $ReleaseName }}-master-0.{{ $servicio_statefulset }},{{ $ReleaseName }}-master-1.{{ $servicio_statefulset }}
{{- end }}
                - name: ELASTIC_PASSWORD
                  valueFrom:
                        secretKeyRef:
                            name: {{ include "elasticsearch.nombre-secret-general" $ }}
                            key: elastic-user-password
                {{- with $valores.deploy.extraEnv }}
                  {{- toYaml . | nindent 16 }}
                {{- end }}
              volumeMounts:
                - name: datos-elasticsearch
                  mountPath: /usr/share/elasticsearch/data
                  
    volumeClaimTemplates:
        -   metadata:
                name: datos-elasticsearch
            spec:
                storageClassName: {{ $Elastic.persistence.storageClassName }}
                resources:
                    requests:
                        storage: {{ $Elastic.persistence.capacity }}
                {{- with $Elastic.persistence.accessModes }}
                accessModes: 
                  {{- toYaml . | nindent 18 }}
                {{- end }}
 #{{- end }}
---
{{- end }}
{{- end }}
