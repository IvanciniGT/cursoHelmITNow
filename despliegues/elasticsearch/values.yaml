#tag:  7.11.1

elastic:
  #app: es ## Generamos esta label a nivel de cluster???
  image:
    repo: elasticsearch
    #tag:  7.11.2
    ports: 
        private: 9300
        public: 9200
    dataPath:

  auth:
      password: password

  conf:
    cluster.name: MiCluster
    xpack.license.self_generated.type: basic
    xpack.security.enabled: "true"
    cluster.routing.allocation.disk.threshold_enabled: "false"
    cluster.join.timeout: 180s
    cluster.publish.timeout: 180s

  persistence:
    enabled: true
    storageClassName: "cluster-nfs"
    capacity: 10Gi
    accessModes:
        #- ReadWriteOnce
        #- ReadOnceMany
        #- ReadWriteMany
        - ReadOnlyMany

master:
    image:
        repo: elasticsearch
        #tag:  7.11.2
        dataPath:
    deploy:
        replicas: 3
        resources:
            requests:
                memory: 0.5Gi
                cpu: 0.5
        annotations: {}
        extraLabels: {}
        tolerations: {}
        affinities: {}
        #allowReplicaDeploymentOnSameNode: allowed # disallowed, discouraged
        defaultAntiPodAffinity: true
        extraEnv: {}
        conf:
          ES_JAVA_OPTS: "-Xms350m -Xmx350m" 
    
    service:
        name:
            suffixOverride:
            fullOverride: 
        type: ClusterIP
        ports:
            private: 9300
            public: 9200
        nodePort:
        loadBalancerIP:

data:
    deploy:
        replicas: 2
        resources: {}
        annotations: {}
        extraLabels: {}
        tolerations: {}
        affinities: {}
        #allowReplicaDeploymentOnSameNode: allowed # disallowed, discouraged
        defaultAntiPodAffinity: true
        extraEnv: {}
        conf:
          ES_JAVA_OPTS: "-Xms350m -Xmx350m" 
    
ingest:
    deploy:
        replicas: 2
        resources: {}
        annotations: {}
        extraLabels: {}
        tolerations: {}
        affinities: {}
        #allowReplicaDeploymentOnSameNode: allowed # disallowed, discouraged
        defaultAntiPodAffinity: true
        extraEnv: {}
        conf:
          ES_JAVA_OPTS: "-Xms350m -Xmx350m" 
    
    service:
        name:
            suffixOverride:
            fullOverride: 
        type: ClusterIP
        ports:
            private: 9300
            public: 9200
        nodePort:
        loadBalancerIP:

    ingress:
        enabled: false
        host: www.elastic-ingest.com
        path: /
  
coordinator:

    deploy:
        replicas: 0
        resources:
            requests:{}
        annotations: {}
        extraLabels: {}
        tolerations: {}
        affinities: {}
        #allowReplicaDeploymentOnSameNode: allowed # disallowed, discouraged
        defaultAntiPodAffinity: true
        extraEnv: {}
        conf:
          ES_JAVA_OPTS: "-Xms350m -Xmx350m" 
          
    service: # REALEASE_NAME-coordinator-svc
        name:
            suffixOverride:
            fullOverride: 
        type: ClusterIP
        ports:
            private: 9300
            public: 9200

        nodePort:
        loadBalancerIP:

    ingress:
        enabled: false
        host: www.elastic-coordinator.com
        path: /
  
  
  

#Configuraciones de Kibana
kibana:
    image:
        repo: kibana
        #tag:  7.11
        port: 5601

    deploy:
        replicas: 1
        resources: {}
        annotations: {}
        extraLabels: {}
        tolerations: {}
        affinities: {}
        defaultAntiPodAffinity: true
        extraEnv: {}
        #sidecars: {}
        #initContainers: {}
        #extraVolumes: {}
        
    service:
        name:
            suffixOverride:
            fullOverride: 
        type: ClusterIP # etc...
        port: 5601
        nodePort: ~
        loadBalancerIP: ~
    
    ingress:
        enabled: false
        host: www.kibana.es
        path: /
